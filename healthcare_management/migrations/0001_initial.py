# Generated by Django 3.0.2 on 2020-06-10 21:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('dictili_medical', '0001_initial'),
        ('localization_management', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DiagnosisAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HealthCare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=150)),
                ('address', models.CharField(blank=True, max_length=150, null=True)),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('Type', models.CharField(choices=[('H', 'Hospital'), ('C', 'Clinic'), ('L', 'Laboratory'), ('R', 'Radio Center')], max_length=3)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='localization_management.City')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('belongs_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='healthcare_management.HealthCare')),
                ('speciality', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='services', to='dictili_medical.Speciality')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('number', models.IntegerField()),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healthcare_management.Service')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('insurance_number', models.CharField(max_length=255, unique=True)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.Profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('number', models.IntegerField()),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healthcare_management.Service')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HealthCareWorker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('identifier', models.CharField(max_length=255, unique=True)),
                ('professional_card', models.ImageField(upload_to='media/cards')),
                ('worker_type', models.CharField(choices=[('N', 'Nurse'), ('C', 'Caregiver'), ('A', 'Anesthesist'), ('D', 'Doctor'), ('R', 'Resident')], max_length=2)),
                ('access_time', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='users', to='accounts.AccessTimes')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.Profile')),
                ('works_at', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='workers', to='healthcare_management.Service')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Furniture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('number', models.IntegerField()),
                ('f_type', models.CharField(choices=[('T', 'Table'), ('C', 'Chair'), ('B', 'Bed')], max_length=3)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healthcare_management.Service')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DiagnosticHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('comment', models.TextField()),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='diagnoses', to='healthcare_management.DiagnosisAction')),
                ('by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='patients_history', to='healthcare_management.HealthCareWorker')),
                ('diagnosed_with', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='dictili_medical.Pathology')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='diagnosis_history', to='healthcare_management.Patient')),
                ('symptoms', models.ManyToManyField(to='dictili_medical.Symptom')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
